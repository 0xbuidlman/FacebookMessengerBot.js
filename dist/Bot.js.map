{"version":3,"sources":["../src/Bot.es6"],"names":[],"mappings":"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","file":"Bot.js","sourcesContent":["import EventEmitter from 'events';\nimport {Router} from 'express';\nimport Message from './Message.es6';\nimport ButtonSet from './ButtonSet.es6';\nimport fetch from './libs/fetch.es6';\nimport _ from 'lodash';\n\nexport {Message, ButtonSet};\n\nexport async function wait(time) {\n  return new Promise(resolve => setTimeout(() => resolve(), time));\n}\n\nclass FacebookMessengerBot extends EventEmitter {\n  static ButtonSet = ButtonSet;\n  static Message = Message;\n\n  static REQUEST_BODY = 'request-body';\n\n  static wait = wait;\n\n  constructor(token, verification) {\n    super();\n\n    this._token = token;\n    this._verification = verification;\n\n    this.on(FacebookMessengerBot.REQUEST_BODY, this._onReceiveMessage);\n  }\n\n  async send(to, message) {\n    try {\n      await fetch('https://graph.facebook.com/v2.6/me/messages', {\n        method: 'post',\n        query: {access_token: this._token},\n        body: {recipient: {id: to}, message}\n      });\n    } catch (e) {\n      if (e.text) {\n        let text = e.text;\n        try {\n          const err = JSON.parse(e.text).error;\n          text = `${err.type || 'Unknown'}: ${err.message || 'No message'}`;\n        } catch (ee) {\n          // ignore\n        }\n\n        throw Error(text);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async _onReceiveMessage(body) {\n    const message = body.entry[0].messaging[0];\n    Object.assign(message, message.message);\n    delete message.message;\n\n    message.raw = JSON.parse(JSON.stringify(body));\n\n    message.sender.fetch = async () => {\n      const {text} = await fetch(`https://graph.facebook.com/v2.6/${message.sender.id}`, {\n        query: {access_token: this._token, fields: 'first_name,last_name,profile_pic'}\n      });\n\n      Object.assign(message.sender, JSON.parse(text));\n\n      return message.sender;\n    };\n\n    if (message.postback) {\n      let postback = {};\n\n      try {\n        postback = JSON.parse(message.postback.payload);\n      } catch (e) {\n        // ignore\n      }\n\n      if (postback.hasOwnProperty('data')) {\n        message.postback = postback;\n        message.data = postback.data;\n        message.event = postback.event;\n\n        this.emit('postback', message.event, message.data, message);\n\n        if (postback.hasOwnProperty('event')) {\n          this.emit(message.event, message.data, message);\n        }\n      } else {\n        this.emit('invalid-postback', message.postback, message);\n      }\n\n      return;\n    }\n\n    const attachments = _.groupBy(message.attachments, 'type');\n\n    if (attachments.image) {\n      message.images = attachments.image.map(a => a.payload.url);\n    }\n\n    if (attachments.video) {\n      message.videos = attachments.video.map(a => a.payload.url);\n    }\n\n    if (attachments.audio) {\n      message.audio = attachments.audio.map(a => a.payload.url)[0];\n    }\n\n    if (attachments.location) {\n      const location = attachments.location[0];\n      message.location = {...location, ...location.payload.coordinates};\n      delete message.location.payload;\n    }\n\n    message.object = body.object;\n\n    delete message.attachments;\n\n    this.emit('message', message);\n  }\n\n  router() {\n    const router = new Router();\n\n    router.get('/', (req, res) => {\n      if (req.query['hub.verify_token'] === this._verification) {\n        res.send(req.query['hub.challenge']);\n      } else {\n        res.send('Error, wrong validation token');\n      }\n    });\n\n    router.post('/', (req, res) => {\n      this.emit(FacebookMessengerBot.REQUEST_BODY, req.body);\n      res.send().status(200);\n    });\n\n    return router;\n  }\n}\n\nexport default FacebookMessengerBot;\n"]}